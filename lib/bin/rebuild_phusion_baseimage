#!/bin/bash

THIS_DIR="$(cd "$(dirname "$BASH_SOURCE")"; pwd)"
BASE_DIR="$(dirname $(dirname $THIS_DIR))"
echo
echo '########################################'
echo "## running \"$(basename "$BASH_SOURCE")\""
echo '########################################'

. $BASE_DIR/lib/bash_include/config.bash
. $BASE_DIR/lib/bash_include/github.bash
. $BASE_DIR/lib/bash_include/bash_utils.bash

IMAGE_FULLNAME="$DOCKER_NAMESPACE/$PHUSION_BASE_IMAGE_NAME"
TARGET_IMAGE_NAME="$IMAGE_FULLNAME:$PHUSION_BASE_IMAGE_VERSION"

github_checkout "$PHUSION_BASE_IMAGE_REPO" "$PHUSION_BASE_IMAGE_SOURCE_DIR" "$PHUSION_BASE_IMAGE_REPO_RELEASE_TAG" || exit 1

cd "$PHUSION_BASE_IMAGE_SOURCE_DIR" || exit 1

export PATH="$BASE_DIR/lib/docker_shim:$PATH" # use a docker shim to filter out arguments we don't like

export PLATFORM=amd64 QEMU_ARCH=amd64 TAG_ARCH=amd64
export DOCKER_BUILDKIT=0
export BUILDPLATFORM=linux/amd64
MAKE_OUTPUT="$(make build BASE_IMAGE="$BASE_IMAGE" NAME="$IMAGE_FULLNAME" )" || exit_with_error_message "make build FAILED" # build
# due to mismatch of version tag in Makefile vs. version.txt, we must manually tag built image with correct name
BUILT_IMAGE_NAME="$(echo $MAKE_OUTPUT | grep -e "...but will translate to" | awk '{ print $5 }')"
echo $BUILT_IMAGE_NAME
echo "Re-tagging $BUILT_IMAGE_NAME with: docker tag $BUILT_IMAGE_NAME $TARGET_IMAGE_NAME"
docker tag $BUILT_IMAGE_NAME $TARGET_IMAGE_NAME

TAG_REPORT="$(docker images | grep "$IMAGE_FULLNAME.*$PHUSION_BASE_IMAGE_VERSION")" || exit_with_error_message "Image not tagged as expected"
echo $TAG_REPORT > "$PHUSION_BASE_IMAGE_SOURCE_STATE_REPORT"
report_local_repository_state "$PHUSION_BASE_IMAGE_SOURCE_DIR" >> "$PHUSION_BASE_IMAGE_SOURCE_STATE_REPORT"
