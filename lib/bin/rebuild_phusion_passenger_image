#!/bin/bash

THIS_DIR="$(cd "$(dirname "$BASH_SOURCE")"; pwd)"
BASE_DIR="$(dirname $(dirname $THIS_DIR))"
echo
echo '########################################'
echo "## running \"$(basename "$BASH_SOURCE")\""
echo '########################################'

. $BASE_DIR/lib/bash_include/config.bash
. $BASE_DIR/lib/bash_include/github.bash
. $BASE_DIR/lib/bash_include/bash_utils.bash


PHUSION_PASSENGER_IMAGE_NAME="$(new_image_name_from_repo $PHUSION_PASSENGER_IMAGE_REPO)"
IMAGE_FULLNAME="$DOCKER_NAMESPACE/$PHUSION_PASSENGER_IMAGE_NAME"
# add -ruby32 to target image to match Dockerfile
TARGET_IMAGE_NAME="$IMAGE_FULLNAME-ruby34:$PHUSION_PASSENGER_IMAGE_VERSION"

github_checkout "$PHUSION_PASSENGER_IMAGE_REPO" "$PHUSION_PASSENGER_IMAGE_SOURCE_DIR" "$PHUSION_PASSENGER_IMAGE_REPO_RELEASE_TAG" || exit 1

cd "$PHUSION_PASSENGER_IMAGE_SOURCE_DIR" || exit 1

export PATH="$BASE_DIR/lib/docker_shim:$PATH" # use a docker shim to filter out arguments we don't like

# remove registry prepend from Makefile
MAKEFILE="Makefile"
echo "Removing REGISTRY from image name"
sed -i "s/NAME ?= \$(REGISTRY)\//NAME ?= /" $MAKEFILE
# fix Dockerfile.base and Dockerfile use correct images
BASE_DOCKER_FILE="./image/Dockerfile.base"
sed -i "s~^FROM[[:space:]].\{1,\}$~FROM $DOCKER_NAMESPACE/phusion_baseimage:$PHUSION_BASE_IMAGE_VERSION~" $BASE_DOCKER_FILE
DOCKER_FILE="./image/Dockerfile"
INTER_IMAGE_NAME="phusion_passenger-base"
INTER_IMAGE_TAG="latest-amd64"
echo "intermediate image is $DOCKER_NAMESPACE/$INTER_IMAGE_NAME:$INTER_IMAGE_TAG"
sed -i "s~^FROM[[:space:]].\{1,\}$~FROM docker.io/$DOCKER_NAMESPACE/$INTER_IMAGE_NAME:$INTER_IMAGE_TAG~" $DOCKER_FILE
MAKE_TARGET=build_ruby34
MAKE_OUTPUT="$(make $MAKE_TARGET NAME="$IMAGE_FULLNAME")" || exit_with_error_message "make build FAILED" # build
# due to mismatch of version tag in Makefile vs. version.txt, we must manually tag built image with correct name
# since build_ruby33 will create an arm64 and amd64 image, we need to grab the correct (amd64) image id
BUILT_IMAGE_TAG="$PHUSION_PASSENGER_IMAGE_VERSION-amd64"
AMD64_IMAGE_ID="$(docker images | grep $BUILT_IMAGE_TAG | awk '{print $3}')"
echo "Re-tagging image $AMD64_IMAGE_ID with: docker tag $AMD64_IMAGE_ID $TARGET_IMAGE_NAME"
docker tag $AMD64_IMAGE_ID $TARGET_IMAGE_NAME
TAG_REPORT="$(docker images | grep "$IMAGE_FULLNAME.*$PHUSION_PASSENGER_IMAGE_VERSION")" || exit_with_error_message "Image not tagged as expected"

echo $TAG_REPORT > "$PHUSION_PASSENGER_IMAGE_SOURCE_STATE_REPORT"
report_local_repository_state "$PHUSION_PASSENGER_IMAGE_SOURCE_DIR" >> "$PHUSION_PASSENGER_IMAGE_SOURCE_STATE_REPORT"
