#!/bin/bash

THIS_DIR="$(cd "$(dirname "$0")"; pwd)"
BASE_DIR="$(dirname $(dirname $THIS_DIR))"

. $BASE_DIR/lib/bash_include/config.bash

SOURCE_DIR="$BASE_DIR"
cd $SOURCE_DIR || exit 1

EXPECTED_FROM_IMAGE_PATTERN="$DOCKER_NAMESPACE/$PHUSION_PASSENGER_IMAGE_NAME.*:$PHUSION_PASSENGER_IMAGE_VERSION"
grep "^FROM[[:space:]]*$EXPECTED_FROM_IMAGE_PATTERN[[:space:]]*\$" "$BASE_DIR/Dockerfile" || { echo "ERROR: $(basename $0): Dockerfile is not building from an image matching \"$EXPECTED_FROM_IMAGE_PATTERN\"." >&2; exit 1; }
docker build -t "$MAIN_IMAGE_FULLNAME:latest" --build-arg VCS_REF=$(git rev-parse HEAD) . || exit 1 # Don't tag with actual version numbers until the publish script, so you can build, attempt publish, change version.txt when it fails, and re-attempt publish without having to build again
docker image ls | grep "\\b$MAIN_IMAGE_FULLNAME\\b" | grep "\\blatest\\b" || exit 1

echo;echo "Showing labels for \"$MAIN_IMAGE_FULLNAME:latest\":"
docker inspect --format '{{range $key, $val := .Config.Labels}}{{$key}}="{{$val}}"{{println}}{{end}}' "$MAIN_IMAGE_FULLNAME:latest"
